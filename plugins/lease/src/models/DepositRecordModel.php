<?php

namespace Yunshop\LeaseToy\models;

use app\common\models\BaseModel;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\DB;
use app\backend\modules\member\models\Member;
use app\frontend\models\Order;


/**
* Author: 芸众商城 www.yunzshop.com
* Date: 2018/3/2
* Time: 15:22
*/
class DepositRecordModel extends BaseModel
{
    use SoftDeletes;

    public $table = 'yz_lease_toy_record';


    protected $guarded = [''];

    // public $orderGoods;

    // public function __construct(array $attributes = [])
    // {
    //     parent::__construct($attributes);
    // }

    // public function setOrderGoods(PreOrderGoods $orderGoods)
    // {
    //     $this->orderGoods = $orderGoods;
    //     $orderGoods->orderLeaseGoods->push($this);

    // }
    // public function save(array $options = [])
    // {
    //     $this->lease_member_id = $this->orderGoods->uid;
    //     $this->uniacid = $this->orderGoods->uniacid;
    //     $this->order_sn = Order::find($this->orderGoods->order_id)->order_sn;
    //     return parent::save($options); // TODO: Change the autogenerated stub
    // }


    public static function aloneMembersRecord($id, $search)
    {
        $model = self::uniacid()->where('lease_member_id', $id);

        if (!empty($search['realname']) || !empty($search['level'])) {
            $model->whereHas('belongsToMember', function ($query) use($search) {
                if (!empty($search['realname'])) {
                    $member = $query->where('nickname', 'like', '%' . $search['realname'] . '%')
                    ->orWhere('mobile', 'like', $search['realname'] . '%')
                    ->orWhere('realname', 'like', '%' . $search['realname'] . '%');
                }
                if (!empty($search['level'])) {
                    $member = $query->whereHas('yzMember', function ($query2) use ($search) {
                        return $query2->where('level_id', $search['level']);
                    });
                }
                return $member;
            });
        }
        if (!empty($search['status'] || $search['status'] === '0')) {
            $model->where('status', $search['status']);
        }

        if ($search['searchtime'] == '1') {
            $range = [strtotime($search['times']['start']), strtotime($search['times']['end'])];
            $model->whereBetween('created_at', $range);
        }


        $model->with(['belongsToMember' => function ($query) use ($search) {
            $member = $query->select('uid', 'nickname', 'avatar', 'realname', 'mobile')
            ->with(['yzMember' => function ($query3) {
                return $query3->select('member_id','level_id');
            }]);
        }]);

        return $model;

    }

    public static function toTal($id)
    {
        $data['frozens'] = self::where('lease_member_id', $id)->where('status', 0)->sum('deposit');
        $data['returns'] = self::where('lease_member_id', $id)->where('status', 2)->sum('retreat_deposit');

        $data['and'] = $data['frozens'] + $data['returns'];

        return $data;

    }

    public function belongsToMember()
    {
        return $this->belongsTo('app\backend\modules\member\models\Member', 'lease_member_id', 'uid');
    }
    

}