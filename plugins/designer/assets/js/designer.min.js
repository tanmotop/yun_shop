// 百度编辑器初始化
var opts = {
    type: 'image',
    direct: false,
    multi: true,
    tabs: {
        'upload': 'active',
        'browser': '',
        'crawler': ''
    },
    path: '',
    dest_dir: '',
    global: false,
    thumb: false,
    width: 0
};

var goodsOffset = 0;

UE.registerUI('myinsertimage', function (editor, uiName) {
        editor.registerCommand(uiName, {
            execCommand: function () {
                require(['fileUploader'],
                    function (uploader) {
                        uploader.upload_url(url.upload_url);
                        uploader.image_url(url.image_url);
                        uploader.fetch_url(url.fetch_url);
                        uploader.delet_url(url.delet_url);
                        uploader.show(function (imgs) {
                                if (imgs.length == 0) {
                                    return;
                                } else if (imgs.length == 1) {
                                    editor.execCommand('insertimage', {
                                        'src': imgs[0]['url'],
                                        '_src': imgs[0]['attachment'],
                                        'width': '100%',
                                        'alt': imgs[0].filename
                                    });
                                } else {
                                    var imglist = [];
                                    for (i in imgs) {
                                        imglist.push({
                                            'src': imgs[i]['url'],
                                            '_src': imgs[i]['attachment'],
                                            'width': '100%',
                                            'alt': imgs[i].filename
                                        });
                                    }
                                    editor.execCommand('insertimage', imglist);
                                }
                            },
                            opts);
                    });
            }
        });
        var btn = new UE.ui.Button({
            name: '插入图片',
            title: '插入图片',
            cssRules: 'background-position: -726px -77px',
            onclick: function () {
                editor.execCommand(uiName);
            }
        });
        editor.addListener('selectionchange',
            function () {
                var state = editor.queryCommandState(uiName);
                if (state == -1) {
                    btn.setDisabled(true);
                    btn.setChecked(false);
                } else {
                    btn.setDisabled(false);
                    btn.setChecked(state);
                }
            });
        return btn;
    },
    19);

UE.registerUI('myinsertvideo', function (editor, uiName) {
    editor.registerCommand(uiName, {
        execCommand: function () {
            require([inits + 'static/js/fileUploader.min.js'],
                function (uploader) {
                    uploader.upload_url(url.upload_url);
                    uploader.image_url(url.image_url);
                    uploader.fetch_url(url.fetch_url);
                    uploader.delet_url(url.delet_url);
                    uploader.video_url(url.video_url);
                    uploader.show(function (video) {
                        if (!video) {
                            return;
                        } else {
                            var videoType = video.isRemote ? 'iframe' : 'video';
                            editor.execCommand('insertvideo', {
                                'url': video.url,
                                'width': 300,
                                'height': 200
                            }, videoType);
                        }
                    }, {
                        type: 'video'
                    });
                }
            );
        }
    });
    var btn = new UE.ui.Button({
        name: '插入视频',
        title: '插入视频',
        cssRules: 'background-position: -320px -20px',
        onclick: function () {
            editor.execCommand(uiName);
        }
    });
    editor.addListener('selectionchange', function () {
        var state = editor.queryCommandState(uiName);
        if (state == -1) {
            btn.setDisabled(true);
            btn.setChecked(false);
        } else {
            btn.setDisabled(false);
            btn.setChecked(state);
        }
    });
    return btn;
}, 20);

$(function () {
    require([util_name], function (util) {
        var preview_id = util.cookie.get('preview_id');
        if (preview_id) {
            preview(preview_id);
        }
    });

    // $(".fe-save-info-type-ok").click(function () {
    //     var pagetype = $(this).data("type");
    //     if (pagetype != '2' || pagetype != '3') {
    //         $(this).find(".fe-save-main-radio").addClass("fe-save-main-radio2").text("√");
    //         $(this).siblings().find(".fe-save-main-radio").removeClass("fe-save-main-radio2").text("");
    //     }
    //     $("input[name=pagetype]").val(pagetype);
    // });
    $('.office_page').click(function () {
        if ($(this).hasClass('fe-save-main-radio2')) {
            $(this).text('').removeClass('fe-save-main-radio2');

            $('#pagetype').val(check_pagetype('1', true));
        } else {
            remove_other_type(this);

            $('#pagetype').val(check_pagetype('1', false));
        }
        validatorIsEmpty();
    });

    $('.min_page').click(function () {
        if ($(this).hasClass('fe-save-main-radio2')) {
            $(this).text('').removeClass('fe-save-main-radio2');

            $('#pagetype').val(check_pagetype('2', true));
        } else {
            remove_other_type(this);

            $('#pagetype').val(check_pagetype('2', false));
        }
        validatorIsEmpty();
    });

    $('.app_page').click(function () {
        if ($(this).hasClass('fe-save-main-radio2')) {
            $(this).text('').removeClass('fe-save-main-radio2');

            $('#pagetype').val(check_pagetype('7', true));
        } else {
            remove_other_type(this);

            $('#pagetype').val(check_pagetype('7', false));
        }
        validatorIsEmpty();
    });

    $('.alipay_page').click(function () {
        if ($(this).hasClass('fe-save-main-radio2')) {
            $(this).text('').removeClass('fe-save-main-radio2');

            $('#pagetype').val(check_pagetype('8', true));
        } else {
            remove_other_type(this);

            $('#pagetype').val(check_pagetype('8', false));
        }
        validatorIsEmpty();
    });

    $('.wap_page').click(function () {
        if ($(this).hasClass('fe-save-main-radio2')) {
            $(this).text('').removeClass('fe-save-main-radio2');

            $('#pagetype').val(check_pagetype('5', true));
        } else {
            remove_other_type(this);

            $('#pagetype').val(check_pagetype('5', false));
        }
        validatorIsEmpty();
    });

    $('.other_page').click(function () {
        $('.office_page').text('').removeClass('fe-save-main-radio2');
        $('.min_page').text('').removeClass('fe-save-main-radio2');
        $('.app_page').text('').removeClass('fe-save-main-radio2');
        $('.alipay_page').text('').removeClass('fe-save-main-radio2');
        $('.wap_page').text('').removeClass('fe-save-main-radio2');

        $(this).addClass('fe-save-main-radio2').text('√');

        $('#pagetype').val('0');
    });

    $('.weChatAppletPage').click(function () {
        if ($(this).hasClass('fe-save-main-radio2')) {

            $(this).text('').removeClass('fe-save-main-radio2');
            $('.weChatAppletOtherPage').addClass('fe-save-main-radio2').text('√');

            $('#pagetype').val('10');
        } else {
            $(this).addClass('fe-save-main-radio2').text('√');
            $('.weChatAppletOtherPage').text('').removeClass('fe-save-main-radio2');

            $('#pagetype').val('9');
        }
    });

    $('.weChatAppletOtherPage').click(function () {

        if ($(this).hasClass('fe-save-main-radio2')) {

            $(this).text('').removeClass('fe-save-main-radio2');
            $('.weChatAppletPage').addClass('fe-save-main-radio2').text('√');

            $('#pagetype').val('9');
        } else {
            $(this).addClass('fe-save-main-radio2').text('√');
            $('.weChatAppletPage').text('').removeClass('fe-save-main-radio2');

            $('#pagetype').val('10');
        }
    });
});

function validatorIsEmpty() {
    var value = $('#pagetype').val();

    if (value == '') {
        $('.other_page').addClass('fe-save-main-radio2').text('√');
        $('#pagetype').val('0');
    }
}

function remove_other_type(obj) {
    $('.other_page').text('').removeClass('fe-save-main-radio2');

    $(obj).addClass('fe-save-main-radio2').text('√');
}

function check_pagetype(val, op) {
    var contents = [];
    var result = [];
    var count = 0;
    var str = '';

    contents = $('#pagetype').val().split(',');
    count = contents.length;

    for (i = 0; i < count; i++) {
        if (contents[i] == val || contents[i] == '0') {
            continue;
        }

        result[i] = contents[i];
    }

    if (!op) {
        result[count + 1] = val;
    }

    res_count = result.length;

    for (j = 0; j < res_count; j++) {
        if (typeof result[j] != 'undefined') {
            str += result[j] + ',';
        }
    }

    return str.substring(0, str.length - 1);
}

function switchtab(tag, n) {
    $("#" + tag + "-" + n).fadeIn().siblings().hide();
    $("#" + tag + "-nav-" + n).addClass("active").siblings().removeClass("active");
}

function fold() {
    width = $(".fe-save").width();
    left = $(".fe-save").css("left");
    left = left.replace("px", "");
    if (left >= 0) {
        $(".fe-save").animate({
            left: 0 - width + 40 + "px"
        }, 1000);
        $(".fe-save-fold").addClass("fe-save-fold2");
    } else {
        $(".fe-save").animate({
            left: "0px"
        }, 1000);
        $(".fe-save-fold").removeClass("fe-save-fold2");
    }
}

function setcookie(id) {
    require([util_name], function (util) {
        util.cookie.set('preview_id', id);
    });
}

function clone(myObj) {
    if (typeof (myObj) != 'object' || myObj == null) return myObj;
    var newObj = new Object();
    for (var i in myObj) {
        newObj[i] = clone(myObj[i]);
    }
    return newObj;
}

function cloneArr(arr) {
    var newArr = [];
    $(arr).each(function (i, val) {
        newArr.push(clone(val));
    });
    return newArr;
}

function initswipe(jobj) {
    var bullets = jobj.next().get(0).getElementsByTagName('a');
    var banner = Swipe(jobj.get(0), {
        auto: 2000,
        continuous: true,
        disableScroll: false,
        callback: function (pos) {
            var i = bullets.length;
            while (i--) {
                bullets[i].className = '';
            }
            bullets[pos].className = 'cur';
        }
    })
}

var myModel = angular.module('SZ_YIEditor', ['ng.ueditor', 'as.sortable'], function ($compileProvider) {
    //$interpolateProvider.startSymbol('@{{').endSymbol('}}');
    // configure new 'compile' directive by passing a directive
    // factory function. The factory function injects the '$compile'
    $compileProvider.directive('compile', function ($compile) {
        // directive factory creates a link function
        return function (scope, element, attrs) {
            scope.$watch(
                function (scope) {
                    // watch the 'compile' expression for changes
                    return scope.$eval(attrs.compile);
                },
                function (value) {
                    // when the 'compile' expression changes
                    // assign it into the current DOM
                    element.html(value);
                    // compile the new DOM and link it to the current
                    // scope.
                    // NOTE: we only compile .childNodes so that
                    // we don't get into infinite loop compiling ourselves
                    $compile(element.contents())(scope);
                }
            );
        };
    });
});

myModel.controller('MainCtrl', function ($scope) {
    $scope.dragControlListeners = {
        orderChanged: function (event) {
            // console.log(event, 'orderChanged');
        },
        containment: '#board', //optional param.
    };

});

myModel.controller('SZ_YIController', ['$scope', '$http', '$filter', function ($scope, $http, $filter) {
    $scope.navs = [{
        id: 'notice',
        icon: 'fa-bullhorn',
        name: '公告',
        enable: 1,
        params: {
            color: '',
            bgcolor: '',
            notice: '',
            noticehref: '',
            scroll: '0'
        }
    },
        {
            id: 'banner',
            icon: 'fa-file-movie-o',
            name: '轮播',
            enable: 1,
            params: {
                shape: '',
                align: 'center',
                scroll: '2',
                bgcolor: ''
            },
            data: [{
                id: 'B0000000000001',
                imgurl: imgUrl1,
                hrefurl: '',
                sysurl: 'url',
                hrefChoice : '1',
                appID : '',
                miniUrl : ''
            },
                {
                    id: 'B0000000000002',
                    imgurl: imgUrl2,
                    hrefurl: '',
                    sysurl: 'url',
                    hrefChoice : '1',
                    appID : '',
                    miniUrl : ''
                },
                {
                    id: 'B0000000000003',
                    imgurl: imgUrl6,
                    hrefurl: '',
                    sysurl: 'url',
                    hrefChoice : '1',
                    appID : '',
                    miniUrl : ''
                }
            ]
        },
        {
            id: 'title',
            icon: 'fa-bold',
            name: '标题',
            enable: 1,
            params: {
                title1: '',
                title2: '',
                showtitle2: '1',
                fontsize1: '18px',
                fontsize2: '14px',
                align: 'left',
                color: '#000',
            }
        },
        {
            id: 'search',
            icon: 'fa-search',
            name: '搜索框',
            enable: 1,
            params: {
                placeholder: '搜索：输入关键字在店内搜索',
                style: 'style1',
                'color': '',
                'bgcolor': '',
                'bordercolor': '',
                searchurl: searchGoodsUrl, //商品搜索
                uniacid: yz_uniacid
            }
        },
        {
            id: 'line',
            icon: 'fa-minus',
            name: '辅助线',
            enable: 1,
            params: {
                height: '2px',
                style: 'dashed',
                color: '#000'
            }
        },
        {
            id: 'blank',
            'enable': 1,
            icon: 'fa-square-o',
            name: '辅助空白',
            params: {
                height: '100px',
                bgcolor: ''
            }
        },
        {
            id: 'shop',
            icon: 'fa-bookmark',
            name: '店招',
            enable: 1,
            params: {
                style: '1',
                bgimg: imgUrl3,
                logo: '1',
                name: '1',
                menu: '1',
                navcolor: ''
            },
            data: []
        },
        {
            id: 'goods',
            icon: 'fa-tasks',
            name: '商品组',
            enable: 1,
            params: {
                style: '50%',
                showtitle: '0',
                titlecolor: '',
                bgcolor: '',
                showname: '1',
                search: '0',
                displaynum: '6',
                title: '',
                option: 'sale-rx',
                buysub: 'buy-3',
                price: '1',
                goodhref: goodsUrl,
                love: '0',
                lowershelf: '1'
            },
            data: []
        },
        {
            id: 'nearbygoods',
            icon: 'fa-tasks',
            name: '附近商品',
            enable: nearEnable,
            params: {
                style: '49.5%',
                showtitle: '0',
                titlecolor: '',
                bgcolor: '',
                distance:'0',
                showname: '1',
                search: '0',
                displaynum: '6',
                title: '',
                option: 'sale-rx',
                buysub: 'buy-3',
                price: '1',
                goodhref: goodsUrl,
                love: '0',
            },
            data: []
        },
        {
            id: 'richtext',
            enable: 1,
            icon: 'fa-font',
            name: '富文本',
            params: {
                bgcolor: '',
            },
            content: ''
        },
        {
            id: 'menu',
            icon: 'fa-hand-o-up',
            name: '按钮组',
            enable: 1,
            params: {
                num: '20%',
                style: '0',
                bgcolor: '#fff',
                fontsize: '12px',
                fontweight: 'normal'
            },
            data: [{
                id: 'F0000000000001',
                imgurl: imgUrlIcon,
                text: '',
                hrefurl: '',
                color: '',
                hrefChoice : '1',
                appID : '',
                miniUrl : ''
            }, {
                id: 'F0000000000002',
                imgurl: imgUrlIcon,
                text: '',
                hrefurl: '',
                color: '',
                hrefChoice : '1',
                appID : '',
                miniUrl : ''
            }, {
                id: 'F0000000000003',
                imgurl: imgUrlIcon,
                text: '',
                hrefurl: '',
                color: '',
                hrefChoice : '1',
                appID : '',
                miniUrl : ''
            }, {
                id: 'F0000000000004',
                imgurl: imgUrlIcon,
                text: '',
                hrefurl: '',
                color: '',
                hrefChoice : '1',
                appID : '',
                miniUrl : ''
            }, {
                id: 'F0000000000005',
                imgurl: imgUrlIcon,
                text: '',
                hrefurl: '',
                color: '',
                hrefChoice : '1',
                appID : '',
                miniUrl : ''
            }]
        },
        {
            id: 'picture',
            icon: 'fa-file-image-o',
            name: '单图',
            enable: 1,
            params: {},
            data: [{
                id: 'P0000000000001',
                imgurl: imgUrl4,
                hrefurl: '',
                option: '0'
            }]
        },
        {
            id: 'pictures',
            icon: 'fa-file-image-o',
            name: '多图',
            enable: morePicNavEnable,
            params: {
                style: '50%'
            },
            data: [
                {
                    id: 'P0000000000001',
                    imgurl: imgUrl3,
                    hrefurl: '',
                    option: '0'
                },
                {
                    id: 'P0000000000002',
                    imgurl: imgUrl3,
                    hrefurl: '',
                    option: '0'
                },
                {
                    id: 'P0000000000003',
                    imgurl: imgUrl3,
                    hrefurl: '',
                    option: '0'
                },
                {
                    id: 'P0000000000004',
                    imgurl: imgUrl3,
                    hrefurl: '',
                    option: '0'
                }
            ]
        },
        {
            id: 'picturesque',
            icon: 'fa-file-image-o',
            name: '图片橱窗',
            enable: weChatAppletNavEnable,
            params: {
                imageOne: imgUrl2,
                imageTwo: imgUrl2,
                imageThree: imgUrl2,
                imageFour: imgUrl2,
                imageOneUrl: '',
                imageTwoUrl: '',
                imageThreeUrl: '',
                imageFourUrl: '',
            },
            data: []
        },
        {
            id: "cube",
            icon: 'fa-picture-o',
            name: "图片组合",
            enable: navEnable,
            params: {
                bgcolor: '',
                layout: {},
                showIndex: 0,
                selection: {},
                currentPos: {},
                currentLayout: {
                    isempty: !0
                }
            },
            data: []
        },
        {
            id: 'location',
            icon: 'fa-street-view',
            name: '定位',
            enable: 1,
            params: {
                bgcolor: '#ccc'
            },
            data: [{
                id: 'P0000000000001',
                imgurl: imgUrl4,
                hrefurl: '',
                style: 'style1',
                color: '',
                bgcolor: '#ccc',
                bordercolor: '',
                option: '0'
            }]
        },
        {
            id: 'store',
            icon: 'fa-columns',
            name: '门店',
            enable: 1,
            params: {
                showsale: 1,
                showscore: 1,
                showlove: 1,
                num: 5,
                salecolor: '#ec7309',
                navcolor: '#ec7309',
                telcolor: '#ec7309',
                shipcolor: 'blue',
                discolor: '#000',
                showshop: 0,
            },
            data: [{
                id: 'P0000000000001',
                imgurl: imgUrl4,
                hrefurl: '',
                option: '0'
            }]
        },
        {
            id: 'sign',
            icon: 'fa-calendar',
            name: navSignName,
            enable: 1,
            params: {
                bgcolor: '#fff',
                bgimg: imgUrl3,
                award: '1',
                //menu: '1',
                fontsize: '18px',
                fontweight: '',
                text: navSignName,
                textcolor: 'red'

            },
            data: []
        },
        {
            id: 'headline',
            icon: 'fa-volume-up',
            name: '头条动态',
            enable: 1,
            params: {
                bgcolor: '#fff',
                bgimg: imgUrl4,
                toptitle: '',
                shownum: '1',
                hrefurl: ''
            },
            data: []
        },
        {
            id: 'article',
            icon: 'fa-book',
            name: '文章组件',
            enable: 1,
            params: {
                bgcolor: '#fff',
                addmethod: '1',
                shownum: '4',
            },
            data: [],
            alldata: []
        },
        {
            id: 'coupon',
            icon: 'fa-money',
            name: '优惠券',
            enable: 1,
            params: {
                bgcolor: '#fff',
                couponcolor: '#ff9800',
                hidemethod: '0',
                addmethod: '1',
                shownum: '4',
            },
            data: []
        },
        {
            id: 'flashsale',
            icon: 'fa-clock-o',
            name: '限时抢购',
            enable: 1,
            params: {
                style: '49.5%',
                showtitle: '0',
                title: '',
                titlecolor: '',
                option: '',
                buysub: 'buy-5',
                bgcolor: '#fff',
                price: '1',
                showname: '1',
                countdown: true,
                overage: true,
                goodhref: goodsUrl,
                love: '0'
            },
            data: []
        },
        {
            id: 'business',
            icon: 'fa-bars',
            name: '选项卡',
            enable: 1,
            params: {
                bgcolor: '#fff',
                fontsize: '16px',
                style: '25%',
            },
            data: [{
                id: 'business_merchant',
                text: '商家',
                url: 'plugin.store-cashier.frontend.store.store.get-store-list-to-page',
                is_open: 1,
                sheer: 1,
            }, {
                id: 'business_discount',
                text: '折扣',
                url: 'plugin.universal-card.frontend.store-discount.store-data',
                is_open: 0,
                sheer: 0,
            }, {
                id: 'business_coupon',
                text: '优惠券',
                url: 'plugin.store-cashier.frontend.store.aggregate-page.coupon',
                is_open: 0,
                sheer: 0,
            }, {
                id: 'business_goods_gift',
                text: '礼包',
                url: 'plugin.store-cashier.frontend.store.aggregate-page.goods-gift',
                is_open: 0,
                sheer: 0,
            }]
        },
        {
            id: 'tbk',
            icon: 'fa-clock-o',
            name: '淘客商品',
            enable: navTbk,
            params: {
                style: '49.5%',
                showtitle: '0',
                title: '',
                titlecolor: '',
                pagesize: 20,
                buysub: 'buy-5',
                bgcolor: '#fff',
                price: '1',
                showname: '1',
                countdown: true,
                overage: true,
                goodhref: goodsUrl,
                love: '0'
            },
            data: []
        },
        {
            id: 'assemble',
            icon: 'fa-clock-o',
            name: '去开团',
            enable: 1,
            params: {
                style: '49.5%',
                showtitle: '0',
                title: '',
                titlecolor: '',
                option: '',
                buysub: 'buy-5',
                bgcolor: '#fff',
                price: '1',
                showname: '1',
                countdown: true,
                overage: true,
                goodhref: goodsUrl,
                love: '0'
            },
            data: []
        },
        {
            id: 'video',
            icon: 'fa-file-video-o',
            name: '视频',
            enable: 1,
            params: {},
            data: [{
                id: 'P0000000000001',
                hrefurl: '',
                imgurl: imgUrTWOl4,
                option: '0'
            }]
        },
        {
            id: 'diyform',
            icon: 'fa-sticky-note',
            name: '表单',
            enable: 1,
            params: {
                showtitle: '1',
                title: '',
                titlecolor: '',
                titlesize: '16px',
                titleposition: 'left',
                bgcolor: '#FFFFFF',
            },
            data: []
        },
        {
            id: 'livestreaming',
            icon: 'fa-file-video-o',
            name: '带货直播',
            enable: 1,
            params: {
                number: '',
                bgcolor: '#ffffff',
                wordcolor: '#000000',
                selectedcolor: '#fa2e2e',
                livebgcolor: '#ffffff',

            },
            data: []
        },
    ];

    console.log("navEnable:", navEnable);
    $scope.shop = {
        uniacid: yz_uniacid
    };
    $scope.navSignName = navSignName;
    $scope.system = [system];
    $scope.pages = [pageinfo];
    console.log('pages', $scope.pages);
    $scope.Items = yzItems;
    $scope.menuList = yzMenuList;
    $scope.topMenuList = yzTopMenuList;
    $scope.underscore = null;
    $scope.inits = inits;
    require(['underscore'], function (underscore) {
        $scope.underscore = underscore;
        $scope.hasCube = function (Item) {

            var has = false;
            var row = 0,
                col = 0;
            for (var i = row; i < 4; i++) {
                for (var j = col; j < 4; j++) {
                    if (!$scope.underscore.isUndefined(Item.params.layout[i][j]) && !Item.params.layout[i][j].isempty) {
                        has = true;
                        break;
                    }
                }
            }
            return has;
        }
    });

    $scope.showSelection = function (Edit, row, col) {

        Edit.params.currentPos = {
            row: row,
            col: col
        };
        Edit.params.selection = {};
        var maxrow = 4,
            maxcol = 4,
            end = false;

        for (var i = row; i <= 3; i++) {

            if ($scope.underscore.isUndefined(Edit.params.layout[i][col]) || !$scope.underscore.isUndefined(Edit.params.layout[i][col]) && !Edit.params.layout[i][col].isempty) {
                maxrow = i;
                end = true;
            }
            if (end) {
                break;
            }
        }

        end = false;
        for (var j = col; j <= 3; j++) {
            if ($scope.underscore.isUndefined(Edit.params.layout[row][j]) || !$scope.underscore.isUndefined(Edit.params.layout[row][j]) && !Edit.params.layout[row][j].isempty) {
                maxcol = j;
                end = true;
            }
            if (end) {
                break;
            }
        }

        var f = -1,
            g = 1;

        for (var i = row; i < maxrow; i++) {

            var y = 1;
            Edit.params.selection[g] = {};
            for (var j = col; j < maxcol; j++) {
                if (f >= 0 && f < j || (!$scope.underscore.isUndefined(Edit.params.layout[i][j]) && Edit.params.layout[i][j].isempty)) {
                    Edit.params.selection[g][y] = {
                        rows: g,
                        cols: y
                    };
                    y++;
                } else {
                    f = j - 1
                }
            }
            g++;
        }

        $(".layout-table li").removeClass("selected");
        $scope.modalobj = $("#" + Edit.id + "-modal-cube-layout").modal({
            show: true
        });
        $('#' + Edit.id + '-modal-cube-layout').find(".layout-table").unbind('mouseover').mouseover(function (a) {
            if ("LI" == a.target.tagName) {
                $(".layout-table li").removeClass("selected");
                var c = $(a.target).attr("data-rows"),
                    d = $(a.target).attr("data-cols");
                $(".layout-table li").filter(function (a, e) {
                    return $(e).attr("data-rows") <= c && $(e).attr("data-cols") <= d
                }).addClass("selected")
            }
        });

        return true;
    }
    $scope.selectLayout = function (Edit, currentRow, currentCol, rows, cols) {
        if ($scope.underscore.isUndefined(rows)) {
            rows = 0;
        }
        if ($scope.underscore.isUndefined(cols)) {
            cols = 0;
        }
        Edit.params.layout[currentRow][currentCol] = {
            cols: cols,
            rows: rows,
            isempty: false,
            imgurl: "",
            classname: "index-" + Edit.params.showIndex
        };
        for (var i = parseInt(currentRow); i < parseInt(currentRow) + parseInt(rows); i++) {
            for (var j = parseInt(currentCol); j < parseInt(currentCol) + parseInt(cols); j++) {
                if (currentRow != i || currentCol != j) {
                    delete Edit.params.layout[i][j];
                }
            }
        }
        Edit.params.showIndex++;
        $scope.modalobj.modal('hide');
        $scope.changeItem(Edit, currentRow, currentCol);
        return true;
    }
    $scope.changeItem = function (Edit, row, col) {
        $("#cube-editor td").removeClass("current").filter(function (a, e) {
            return $(e).attr("x") == row && $(e).attr("y") == col
        }).addClass("current");
        $("#cube_thumb").attr("src", "");
        Edit.params.currentLayout = Edit.params.layout[row][col];
    }
    $scope.delCube = function (Edit, Cid, cols, rows) {
        if (Edit && Cid && cols && rows) {
            var len = Edit.params.layout.length;
            $.each(Edit.params.layout, function (row, a) {
                $.each(Edit.params.layout[row], function (col, b) {
                    if (col != '$$hashKey') {
                        row = parseInt(row);
                        col = parseInt(col);
                        rows = parseInt(rows);
                        cols = parseInt(cols);
                        if (!b) {

                        } else if (b.classname == Edit.params.currentLayout.classname) {
                            for (var i = row; i < row + rows; i++) {
                                for (var j = col; j < col + cols; j++) {
                                    Edit.params.layout[i][j] = {
                                        cols: 1,
                                        rows: 1,
                                        isempty: true,
                                        imgurl: "",
                                        classname: ""
                                    };
                                }
                            }
                        }
                    }
                });

            });
        }
    }
    // 1.1 添加一条子级(good,picture,banner)
    $scope.addItemChild = function (type, Mid) {
        if (type && Mid) {
            t = '';
            if (type == 'good') {
                t = 'G';
            } else if (type == 'picture') {
                t = 'P';
            } else if (type == 'banner') {
                t = 'B';
            }
            var var_id = t + new Date().getTime();
            var push = {
                banner: {
                    id: var_id,
                    imgurl: '',
                    hrefurl: '',
                    sysurl: 'url',
                    hrefChoice : '1',
                    appID : '',
                    miniUrl : ''
                },
                picture: {
                    id: var_id,
                    imgurl: '',
                    hrefurl: '',
                    option: '0'
                },
                good: {}
            };
            var Items = $scope.Items;
            angular.forEach(Items, function (m, index) {
                if (m.id == Mid) {
                    m.data.push(push[type]);
                    //console.log(push[type]);
                }
            });
        }
    }
    $scope.selectIcon = function (menu, event) {
        require.config({
            paths: {
                util: inits + "static/resource/js/app/" + 'util',
                utils: inits + "static/resource/js/app/" + 'utils',
            }
        });
        require([inits + "static/resource/js/app/" + util_name + '.js', "jquery"], function (u, $) {
            var btn = $(event.currentTarget);
            var spview = btn.parent();
            var ipt = spview.find('.icon');
            u.iconBrowser(function (ico) {
                ipt.val(ico);
                menu.icon = ico;
                $scope.$apply();
                ``
            });
        });
    }

    $scope.addMemberItemChild = function (type, Mid) {
        if (type && Mid) {
            t = '';
            if (type == 'tool') {
                t = 'T';
            } else if (type == 'merchant') {
                t = 'M'
            } else if (type == 'market') {
                t = 'K'
            } else if (type == 'asset') {
                t = 'A'
            }
            var var_id = t + new Date().getTime();
            var push = {
                tool: {
                    id: var_id,
                    title: '',
                    imgurl: '',
                    hrefurl: '',
                    icon: '',
                },
                merchant: {
                    id: var_id,
                    title: '',
                    imgurl: '',
                    hrefurl: '',
                    icon: '',
                },
                market: {
                    id: var_id,
                    title: '',
                    imgurl: '',
                    hrefurl: '',
                    icon: '',
                },
                asset: {
                    id: var_id,
                    title: '',
                    imgurl: '',
                    hrefurl: '',
                    icon: '',
                },

            };
            var Items = $scope.Items;
            angular.forEach(Items, function (m, index) {
                if (m.id == Mid) {
                    m.data.more.push(push[type]);
                    //console.log(push[type]);
                }
            });
        }
    }
    // 1.1 删除一条子级
    $scope.delItemChild = function (Mid, Cid) {
        if (confirm("此操作不可逆，确认移除？")) {
            var Items = $scope.Items;
            angular.forEach(Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach(m.data, function (c, index2) {
                        if (c.id == Cid) {
                            m.data.splice(index2, 1);
                        }
                    });
                }
            });
        }
    }

    $scope.delMemberChild = function (Mid, Cid) {
        if (confirm("此操作不可逆，确认移除？")) {
            var Items = $scope.Items;
            angular.forEach(Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach(m.data.more, function (c, index2) {
                        if (c.id == Cid) {
                            m.data.more.splice(index2, 1);
                        }
                    });
                }
            });
        }
    }

    // 1.1 上传图片
    $scope.uploadImgChild = function (Mid, Cid, Type) {
        require(['jquery', util_name], function ($, util) {
            util.image('', function (data) {
                var Items = $scope.Items;
                angular.forEach(Items, function (m, index1) {
                    if (m.id == Mid) {
                        if (Type == 'cube') {
                            m.params.currentLayout.imgurl = data['url'];
                            $("div[mid=" + Mid + "]").mouseover();

                        } else {
                            angular.forEach(m.data, function (c, index2) {
                                if (c.id == Cid) {
                                    c.imgurl = data['url'];
                                    $("div[mid=" + Mid + "]").mouseover();
                                    //console.log(Items);
                                }
                            });
                        }
                    }
                });
            });
        });

    }
    // 1.1 图片魔方上传图片
    $scope.uploadImgChildWechat = function (Mid, Cid, Type) {
        console.log(Type, '类型')
        require(['jquery', util_name], function ($, util) {
            util.image('', function (data) {
                var Items = $scope.Items;
                angular.forEach(Items, function (m, index1) {
                    if (m.id == Mid) {
                        if (Type == 'cube') {
                            m.params.currentLayout.imgurl = data['url'];
                            $("div[mid=" + Mid + "]").mouseover();

                        } else {
                            // angular.forEach(, function (c, index2) {
                            // if (c.id == Cid) {
                            if (Type == 1) {
                                m.params.imageOne = data['url'];
                            } else if (Type == 2) {
                                m.params.imageTwo = data['url'];
                            } else if (Type == 3) {
                                m.params.imageThree = data['url'];
                            } else if (Type == 4) {
                                m.params.imageFour = data['url'];
                            }
                            // c.imgurl = data['url'];
                            $("div[mid=" + Mid + "]").mouseover();
                            //console.log(Items);
                            // }
                            // });


                        }
                    }
                });
            });
        });
        console.log($scope.Items, '类型');

    }

    $scope.uploadMemberImgChild = function (Mid, Cid, Type) {
        //console.log(Cid);
        require(['jquery', util_name], function ($, util) {
            util.image('', function (data) {
                var Items = $scope.Items;
                angular.forEach(Items, function (m, index1) {
                    if (m.id == Mid) {
                        angular.forEach(m.data.more, function (c, index2) {
                            if (c.id == Cid) {
                                c.imgurl = data['url'];
                                $("div[mid=" + Mid + "]").mouseover();
                                //console.log(Items);
                            }
                        });
                    }
                });
            });
        });
    }

    // 上传视频
    $scope.showVideoDialog = function (Mid, Cid) {
        require.config({
            paths: {
                util_name: "'.$param['util_url'].'"
            }
        });
        require([util_name], function (util) {
            util.audio('', function (url) {
                var Items = $scope.Items;

                if (url.error == 1) {
                    alert(url.message)
                }
                // console.log(url, Items, '445445454545')

                angular.forEach(Items, function (m, index1) {
                    if (m.id == Mid) {
                        angular.forEach(m.data, function (item, i) {
                            if (item.id == Cid) {
                                item.hrefurl = url['url'];
                                // item.hrefurl=url.url;
                                $("#custom_video_cover").attr('src', item.hrefurl);
                                $("#custom_video").val(item.hrefurl);
                                $("div[mid=" + Mid + "]").mouseover();
                            }
                        })
                    }
                });
                console.log(Items, '2222')

            }, {direct: true, multi: false, type: 'video', fileSizeLimit: fileSizeLimit});
        });
    }

    $scope.chooseUrlCube = function (Mid, Cid) {
        var Items = $scope.Items;
        angular.forEach(Items, function (m) {
            if (m.id == Mid) {
                m.params.currentLayout.url = 'http://www.qq.com';
                $("div[mid=" + Mid + "]").mouseover();
            }
        });
    }
    // 1.1 选择链接
    $scope.chooseUrl = function (Mid, Cid, T) {
        $('#modal-mylink').attr({
            "Mid": Mid,
            "Cid": Cid,
            "T": T
        });
        $('#modal-mylink').modal();

    }
    $scope.chooseLink = function (type, hid) {

        var Mid = $('#modal-mylink').attr("Mid");
        var Cid = $('#modal-mylink').attr("Cid");
        var T = $('#modal-mylink').attr("T");
        console.log(Mid, T, Cid, '参数啊啊啊啊');

        var url = $("#fe-tab-link-li-" + hid).attr("nhref");
        if (url == undefined) {
            url = $(" #" + hid).attr("nhref");
        }
        if (hid == 'other-1') {
            url = $("textarea[name=mylink_href]").val();
        }
        if (url && Mid && Cid) {

            angular.forEach($scope.Items, function (m, index1) {
                if (m.id == Mid) {
                    if (T == 'cube') {
                        m.params.currentLayout.url = url;
                        $("div[mid=" + Mid + "]").mouseover();
                    } else if (T == 'member') {
                        angular.forEach(m.data.more, function (c, index2) {
                            if (c.id == Cid) {
                                c.hrefurl = url;
                            }
                        });
                    } else {
                        angular.forEach(m.data, function (c, index2) {
                            if (c.id == Cid) {
                                c.hrefurl = url;
                            }
                        });
                    }
                }
            });

            var id = "menu-" + Cid;
            $("input[data-id=" + id + "]").val(url);
            $('#modal-mylink').attr({
                "Mid": '',
                "Cid": '',
                T: ''
            });
            console.log(hid);
            // console.log($scope.Items,'99999999');

            $('#modal-mylink .close').click();
        } else if (T) {
            angular.forEach($scope.Items, function (item, index) {
                if (T == 1) {
                    item.params.imageOneUrl = url
                } else if (T == 2) {
                    item.params.imageTwoUrl = url
                } else if (T == 3) {
                    item.params.imageThreeUrl = url
                } else if (T == 4) {
                    item.params.imageFourUrl = url
                }
            })
            var id = "menu-" + Cid;
            $("input[data-id=" + id + "]").val(url);
            $('#modal-mylink').attr({
                "Mid": '',
                "Cid": '',
                T: ''
            });
            console.log(hid);

            $('#modal-mylink .close').click();
        }

    }
    $scope.temp = {
        notcie: []
    };

    $scope.hrefType = hrefType;
    $scope.focus = 'M0000000000000';
    //$scope.selectGoods = [];
    $scope.keyword = function (val, Eid) {
        $.ajax({
            type: 'post',
            url: keyWordUrl,
            data: {
                keyword: val,
                page_id: designerId
            },
            success: function (data) {
                if (data != 'ok') {
                    alert('关键字已存在');
                    window.dosave = '1';
                    $("div[Editid=" + Eid + "]").find(".keyword").css('border', "#f01 solid 1px");
                } else {
                    window.dosave = '0';
                    $("div[Editid=" + Eid + "]").find(".keyword").css('border', "#ddd solid 1px");
                }
            },
            error: function () {
                alert('获取关键字信息失败！请刷新页面。');
            }
        });
    }

    $scope.selectgood = function (Mid) {
        console.log(Mid);
        kw = $("#select-kw").val();
        $http.post(selectGoodsUrl, {
            'keyword': kw
        }).success(function (data) {
            console.log(data);
            $scope.selectGoods = [];
            angular.forEach(data, function (d, i) {
                Sid = 'S' + new Date().getTime();
                $scope.selectGoods.push({

                    id: Sid + i,
                    name: data[i].title,
                    img: data[i].thumb,
                    goodid: data[i].id,
                    pricenow: data[i].price,
                    priceold: data[i].market_price,
                    sales: data[i].real_sales,
                    unit: data[i].sku,
                    stock: data[i].stock,
                    award: data[i].award,
                    award_proportion: data[i].award_proportion,
                    love_name: data[i].love_name
                });
            });
            $("div[mid=" + Mid + "]").mouseover();
            //console.log($scope.selectGoods);
        }).error(function () {
            alert('查询商品信息失败！请刷新页面。');
        });
    }

    $scope.searchgood = function (Mid) {
        console.log(Mid);
        kw = $("#secect-kw").val();
        //var data = $.param({kw:kw});

        $http.post(myLinkGoodsUrl, {
            kw: kw
        }).success(function (data) {
            console.log(data);
            $scope.searchGoods = [];
            angular.forEach(data, function (d, i) {
                Sid = 'S' + new Date().getTime();
                $scope.searchGoods.push({
                    id: Sid + i,
                    goods_id: data[i].id,
                    title: data[i].title,
                    thumb: data[i].thumb,
                    //goodid: data[i].id,
                    price: data[i].price,
                    market_price: data[i].market_price,
                    url: data[i].url

                    //sales: data[i].real_sales,
                    //unit: data[i].sku
                });
            });
            //$("div[mid=" + Mid + "]").mouseover();
        }).error(function () {
            alert('查询商品信息失败！请刷新页面。');
        });
    }

    $scope.pushGood = function (Mid, Sid) {
        var repaction = $('#floating-good').attr("action");
        var repGid = $('#floating-good').attr("Gid");
        angular.forEach($scope.Items, function (m, index1) {
            if (m.id == Mid) {
                angular.forEach($scope.selectGoods, function (s, index2) {
                    if (s.id == Sid) {
                        if (repaction == 'replace' && repGid) {
                            // 执行替换
                            angular.forEach(m.data, function (r, index3) {
                                if (r.id == repGid) {
                                    var Gid = 'G' + new Date().getTime();
                                    r.id = Gid;
                                    r.img = s.img;
                                    r.goodid = s.goodid;
                                    r.name = s.name;
                                    r.priceold = s.priceold;
                                    r.pricenow = s.pricenow;
                                    r.sales = s.sales;
                                    r.unit = s.unit;
                                    r.stock = s.stock;
                                    //r.sales = s.sales;
                                    //r.unit = s.unit;
                                    $('#floating-good .close').click();
                                }
                            });
                        } else if (!repaction) {
                            if (m.data.length < m.params.displaynum) {
                                var Gid = 'G' + new Date().getTime();
                                // 执行添加
                                m.data.push({
                                    id: Gid,
                                    img: s.img,
                                    goodid: s.goodid,
                                    name: s.name,
                                    priceold: s.priceold,
                                    pricenow: s.pricenow,
                                    stock: s.stock,
                                    award: s.award,
                                    award_proportion: s.award_proportion,
                                    love_name: s.love_name,
                                    sales: s.sales
                                });
                            }
                        }
                    }
                });
            }
        });
    }

    //文章营销 搜索
    $scope.selectarticle = function (Mid) {
        kw = $("#select-article").val();
        $http.post(selectArticleUrl, {
            'keyword': kw
        }).success(function (data) {
            //console.log(data);
            if (data.result == 1) {
                $scope.selectArticle = [];
                angular.forEach(data.data.articleList, function (article, i) {
                    Sid = 'S' + new Date().getTime();
                    //var article_pay_money = (article.has_one_article_pay === null)  ? 0 : article.has_one_article_pay.money;
                   // var article_pay_record = (article.has_one_record === null) ? 0 : article.has_one_record.pay_status;
                    $scope.selectArticle.push({
                        id: Sid + i,
                        title: article.title,
                        articleid: article.id,
                        category: article.belongs_to_category.name,
                        time: article.created_at,
                        hrefurl: article.link,
                        thumb: article.thumb,
                        read_num: article.read_num,
                        author: article.author,
                        has_one_article_pay: article.has_one_article_pay,
                        has_one_record: article.has_one_record
                    });
                });
                $("div[mid=" + Mid + "]").mouseover();
            } else {
                alert(data.msg);
            }
        }).error(function () {
            alert('查询商品信息失败！请刷新页面');
        });
    }

    $scope.pushArticle = function (Mid, Sid, $event) {
        var status = $scope.page = $($event.target).is(':checked');
        var repaction = $('#floating-article').attr("action");
        var repGid = $('#floating-article').attr("Gid");
        if (status) {
            angular.forEach($scope.Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach($scope.selectArticle, function (s, index2) {
                        if (s.id == Sid) {
                            if (repaction == 'replace' && repGid) {
                                // 执行替换
                                angular.forEach(m.data, function (r, index3) {
                                    if (r.id == repGid) {
                                        var Gid = 'G' + s.id;
                                        r.id = Gid;
                                        articleid: s.articleid,
                                            r.title = s.title;
                                        r.category = s.category;
                                        r.time = s.time;
                                        r.hrefurl = s.hrefurl;
                                        r.thumb = s.thumb;
                                        r.read_num = s.read_num;
                                        r.author = s.author;
                                        r.has_one_article_pay = s.has_one_article_pay;
                                        r.has_one_record = s.has_one_record;
                                        $('#floating-article .close').click();
                                    }
                                });
                            } else if (!repaction) {
                                var Gid = 'G' + s.id;
                                // 执行添加
                                m.data.push({
                                    id: Gid,
                                    articleid: s.articleid,
                                    title: s.title,
                                    category: s.category,
                                    hrefurl: s.hrefurl,
                                    thumb: s.thumb,
                                    read_num: s.read_num,
                                    author: s.author,
                                    has_one_article_pay: s.has_one_article_pay,
                                    has_one_record: s.has_one_record
                                });
                            }
                        }
                    });
                }
                console.log($scope.Items);
            });
        } else {
            angular.forEach($scope.Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach($scope.selectArticle, function (s, index2) {
                        if (s.id == Sid) {
                            var Gid = 'G' + s.id;
                            angular.forEach(m.data, function (g, index3) {
                                if (g.id == Gid) {
                                    m.data.splice(index3, 1);
                                }
                            });
                        }
                    });
                }
            });
        }
    }

    $scope.pushAllArticle = function (Mid) {
        $http.post(selectArticleUrl).success(function (data) {
            console.log(data);
            angular.forEach($scope.Items, function (m, index1) {
                console.log($scope.Items);
                if (m.id == Mid) {
                    m.alldata = [];
                    angular.forEach(data.data.articleList, function (d, i) {
                        Sid = 'G' + 'S' + new Date().getTime();
                       // var article_pay_money = (d.has_one_article_pay === null)  ? 0 : d.has_one_article_pay.money;
                      //  var article_pay_record = (d.has_one_record === null) ? 0 : d.has_one_record.pay_status;
                        m.alldata.push({
                            id: Sid + d,
                            title: d.title,
                            articleid: d.id,
                            category: d.belongs_to_category.name,
                            time: d.created_at,
                            hrefurl: d.link,
                            thumb: d.thumb,
                            read_num: d.read_num,
                            author: d.author,
                            has_one_article_pay: d.has_one_article_pay,
                            has_one_record: d.has_one_record
                        });
                    });
                }
            });
            $("div[mid=" + Mid + "]").mouseover();
        }).error(function () {
            alert('查询商品信息失败！请刷新页面。');
        });

    }

    $scope.selectcoupon = function (Mid) {
        console.log(Mid);
        kw = $("#select-coupon").val();
        $http.post(selectCouponUrl, {
            'keyword': kw
        }).success(function (data) {
            console.log(data);
            $scope.selectCoupon = [];
            angular.forEach(data, function (d, i) {
                Sid = 'S' + new Date().getTime();
                $scope.selectCoupon.push({
                    id: Sid + i,
                    coupon_id: data[i].id,
                    name: data[i].name,
                    enough: data[i].enough,
                    coupon_method: data[i].coupon_method,
                    deduct: data[i].deduct,
                    discount: data[i].discount,
                    usetotal: data[i].usetotal,
                    gettotal: data[i].gettotal,
                    alltotal: data[i].total,
                    lasttotal: data[i].lasttotal,
                    status: data[i].status,
                    time: data[i].created_at,
                });
            });
            $("div[mid=" + Mid + "]").mouseover();
            // console.log($scope.selectArticle);
        }).error(function () {
            alert('查询商品信息失败！请刷新页面。');
        });
    }

    $scope.selectform = function (Mid) {
        kw = $("#select-form").val();
        $http.post(selectFormUrl, {
            'keyword': kw
        }).success(function (data) {
            $scope.selectForm = [];
            angular.forEach(data, function (d, i) {
                Sid = 'S' + new Date().getTime();
                $scope.selectForm.push({
                    id: Sid + i,
                    form_id: data[i].id,
                    title: data[i].title,
                });
            });
            $("div[mid=" + Mid + "]").mouseover();
            // console.log($scope.selectArticle);
        }).error(function () {
            alert('查询表单信息失败！请刷新页面。');
        });
    }

    $scope.pushCoupon = function (Mid, Sid, $event) {
        var status = $scope.page = $($event.target).is(':checked');
        var repaction = $('#floating-coupon').attr("action");
        var repGid = $('#floating-coupon').attr("Gid");
        if (status) {
            angular.forEach($scope.Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach($scope.selectCoupon, function (s, index2) {
                        if (s.id == Sid) {
                            if (repaction == 'replace' && repGid) {
                                // 执行替换
                                angular.forEach(m.data, function (r, index3) {
                                    if (r.id == repGid) {
                                        var Gid = 'G' + s.id;
                                        r.id = Gid;
                                        r.name = s.name;
                                        r.coupon_id = s.coupon_id;
                                        r.status = s.status;
                                        r.enough = s.enough;
                                        r.deduct = s.deduct;
                                        r.discount = s.discount;
                                        r.coupon_method = s.coupon_method;
                                        r.lasttotal = s.lasttotal;
                                        $('#floating-coupon .close').click();
                                    }
                                });
                            } else if (!repaction) {
                                var Gid = 'G' + s.id;
                                // 执行添加
                                m.data.push({
                                    id: Gid,
                                    coupon_id: s.coupon_id,
                                    name: s.name,
                                    status: s.status,
                                    enough: s.enough,
                                    discount: s.discount,
                                    deduct: s.deduct,
                                    coupon_method: s.coupon_method,
                                    lasttotal: s.lasttotal,
                                });
                            }
                        }
                    });
                }
            });
        } else {
            angular.forEach($scope.Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach($scope.selectCoupon, function (s, index2) {
                        if (s.id == Sid) {
                            var Gid = 'G' + s.id;
                            angular.forEach(m.data, function (g, index3) {
                                if (g.id == Gid) {
                                    m.data.splice(index3, 1);
                                }
                            });
                        }
                    });
                }
            });
        }


    }

    $scope.pushForm = function (Mid, Sid, $event) {
        var repaction = $('#floating-form').attr("action");
        var repGid = $('#floating-form').attr("Gid");
        angular.forEach($scope.Items, function (m, index1) {
            if (m.id == Mid) {
                angular.forEach($scope.selectForm, function (s, index2) {
                    if (s.id == Sid) {
                            var Gid = 'G' + s.id;
                            // 执行添加
                            m.data = {
                                id: Gid,
                                form_id: s.form_id,
                                title: s.title,
                            };
                    }
                });
            }
        });
    }

    $scope.pushAllCoupon = function (Mid) {
        console.log(Mid);
        $http.post(selectCouponUrl).success(function (data) {
            console.log(data);
            angular.forEach($scope.Items, function (m, index1) {
                console.log(Mid);
                if (m.id == Mid) {
                    m.alldata = [];
                    // console.log(m);
                    angular.forEach(data, function (d, i) {
                        Sid = 'G' + 'S' + new Date().getTime();
                        m.alldata.push({
                            id: Sid + i,
                            name: data[i].name,
                            coupon_id: data[i].id,
                            enough: data[i].enough,
                            coupon_method: data[i].coupon_method,
                            deduct: data[i].deduct,
                            discount: data[i].discount,
                            usetotal: data[i].usetotal,
                            gettotal: data[i].gettotal,
                            alltotal: data[i].total,
                            lasttotal: data[i].lasttotal,
                            status: data[i].status,
                            time: data[i].created_at,
                        });
                    });
                }
            });
            $("div[mid=" + Mid + "]").mouseover();
        }).error(function () {
            alert('查询商品信息失败！请刷新页面。');
        });

    }

    $scope.selectflashsale = function (Mid) {
        console.log(Mid);
        kw = $("#select-flashsale").val();
        $http.post(selectFlashsaleUrl, {
            'keyword': kw
        }).success(function (data) {
            console.log(data);
            $scope.selectFlashsale = [];
            angular.forEach(data, function (d, i) {
                start_time = $filter("date")(parseInt(data[i].has_one_goods_limit_buy.start_time) * 1000, "yyyy/MM/dd HH:mm:ss");
                end_time = $filter("date")(parseInt(data[i].has_one_goods_limit_buy.end_time) * 1000, "yyyy/MM/dd HH:mm:ss");
                Sid = 'S' + new Date().getTime();
                $scope.selectFlashsale.push({
                    id: Sid + i,
                    name: data[i].title,
                    img: data[i].thumb,
                    goodid: data[i].id,
                    pricenow: data[i].price,
                    priceold: data[i].market_price,
                    sales: data[i].real_sales,
                    unit: data[i].sku,
                    stock: data[i].stock,
                    start_time: start_time,
                    end_time: end_time,
                });
            });
            $("div[mid=" + Mid + "]").mouseover();
            console.log($scope.selectFlashsale);
        }).error(function () {
            alert('查询商品信息失败！请刷新页面。');
        });
    }

    $scope.selectAssemble = function (Mid) {
        console.log(Mid);
        kw = $("#select-assemble").val();
        $http.post(selectAssembleUrl, {
            'keyword': kw
        }).success(function (data) {
            console.log(data);
            $scope.selectassemble = [];
            angular.forEach(data.data.fightGroupsList, function (d, i) {
                start_time = $filter("date")(parseInt(d.start_time) * 1000, "yyyy/MM/dd HH:mm:ss");
                end_time = d.end_time ? end_time = $filter("date")(parseInt(d.end_time) * 1000, "yyyy/MM/dd HH:mm:ss") : '';
                $scope.selectassemble.push({
                    id: d.id,
                    title: d.title,
                    goods_id: d.goods_id,
                    start_time: start_time,
                    end_time: end_time,
                    status: status,
                    min_price: d.min_price,
                    max_price: d.max_price,
                    member_request: d.member_request,
                    url: d.url,
                    goods_title: d.has_one_goods.title,
                    goods_img: d.has_one_goods.thumb,
                });
                console.log($scope.selectassemble)
            });
            $("div[mid=" + Mid + "]").mouseover();
            console.log($scope.selectAssemble);
        }).error(function () {
            alert('查询商品信息失败！请刷新页面。');
        });
    }

    $scope.pushFlashsale = function (Mid, Sid) {
        var repaction = $('#floating-flashsale').attr("action");
        var repGid = $('#floating-flashsale').attr("Gid");
        angular.forEach($scope.Items, function (m, index1) {
            if (m.id == Mid) {
                angular.forEach($scope.selectFlashsale, function (s, index2) {
                    if (s.id == Sid) {
                        if (repaction == 'replace' && repGid) {
                            // 执行替换
                            angular.forEach(m.data, function (r, index3) {
                                if (r.id == repGid) {
                                    var Gid = 'G' + new Date().getTime();
                                    r.id = Gid;
                                    r.img = s.img;
                                    r.goodid = s.goodid;
                                    r.name = s.name;
                                    r.priceold = s.priceold;
                                    r.pricenow = s.pricenow;
                                    r.sales = s.sales;
                                    r.unit = s.unit;
                                    r.stock = s.stock;
                                    r.start_time = s.start_time;
                                    r.end_time = s.end_time;
                                    $('#floating-flashsale .close').click();
                                }
                            });
                        } else if (!repaction) {
                            var Gid = 'G' + new Date().getTime();
                            // 执行添加
                            m.data.push({
                                id: Gid,
                                img: s.img,
                                goodid: s.goodid,
                                name: s.name,
                                priceold: s.priceold,
                                pricenow: s.pricenow,
                                start_time: s.start_time,
                                end_time: s.end_time,
                                stock: s.stock,
                                sales: s.sales,
                                unit: s.unit,
                            });
                        }
                    }
                });
            }
        });
    }

    $scope.pushAssemble = function (Mid, Sid) {
        var repaction = $('#floating-assemble').attr("action");
        var repGid = $('#floating-assemble').attr("Gid");
        angular.forEach($scope.Items, function (m, index1) {
            if (m.id == Mid) {
                angular.forEach($scope.selectassemble, function (s, index2) {
                    if (s.id == Sid) {
                        if (repaction == 'replace' && repGid) {
                            // 执行替换
                            angular.forEach(m.data, function (r, index3) {
                                if (r.id == repGid) {
                                    r.id = s.id,
                                        r.title = s.title,
                                        r.goods_id = s.goods_id,
                                        r.start_time = s.start_time,
                                        r.end_time = s.end_time,
                                        r.status = s.status,
                                        r.min_price = s.min_price,
                                        r.max_price = s.max_price,
                                        r.member_request = s.member_request,
                                        r.url = s.url,
                                        r.goods_title = s.goods_title,
                                        r.goods_img = s.goods_img,
                                        $('#floating-assemble .close').click();
                                }
                            });
                        } else if (!repaction) {
                            // 执行添加
                            m.data.push({
                                id: s.id,
                                title: s.title,
                                goods_id: s.goods_id,
                                start_time: s.start_time,
                                end_time: s.end_time,
                                status: s.status,
                                min_price: s.min_price,
                                max_price: s.max_price,
                                member_request: s.member_request,
                                url: s.url,
                                goods_title: s.goods_title,
                                goods_img: s.goods_img,
                            });
                        }
                    }
                });
            }
        });
    }

    //活动结束时间与活动开始时间相距多少天
    $scope.interval = function (faultDate, completeTime) {
        var stime = Date.parse(new Date(faultDate));
        var etime = Date.parse(new Date(completeTime));
        var usedTime = etime - stime;  //两个时间戳相差的毫秒数
        var days = Math.floor(usedTime / (24 * 3600 * 1000));
        //计算出小时数
        var leave1 = usedTime % (24 * 3600 * 1000);    //计算天数后剩余的毫秒数
        var hours = Math.floor(leave1 / (3600 * 1000));
        //计算相差分钟数
        var leave2 = leave1 % (3600 * 1000);        //计算小时数后剩余的毫秒数
        var minutes = Math.floor(leave2 / (60 * 1000));
        var time = days + "天" + hours + "时" + minutes + "分";

        return time;
    }

    $scope.load = function () {
    }
    $scope.changeImg = function (Mid, n) {
        width = parseInt($(".fe-mod-move").width());
        height = (width * parseInt(n.replace("%", "")) / 100) - 16;
        $("div[mid=" + Mid + "] .fe-mod-8-main-img img").height(height);
    };
    $scope.setimg = function (Mid, n, item) {
        if (n == "20%" && item.data.length == 4) {
            item.data.push({
                id: 'F0000000000005',
                imgurl: imgUrlIcon,
                text: '',
                hrefurl: '',
                color: ''
            });
        }
        if (n == "25%" && item.data.length == 5) {
            item.data.splice(item.data.length - 1, 1);
        }
        width = $(".fe-mod-move").width();
        n = n.replace("%", "");
        n = n / 100;
        $("div[mid=" + Mid + "] .fe-mod-12 img").height(width * n - 30);
    }
    $scope.setfocus = function (Mid, e) {
        $scope.focus = Mid;
        ccc = $("div[id=" + Mid + "]").offset().top;
        ddd = (ccc - 280) >= 0 ? (ccc - 280) : 0;
        $(".fe-panel-editor").css("margin-top", ddd + "px");
        goodsOffset = ddd;
        $(document.body).animate({
            scrollTop: ccc - 100
        }, 500);
    }
    $scope.drag = function (Mid) {
        var container = $("#editor");
        var del = container.find(".fe-mod-move");
        del.off("mousedown").mousedown(function (e) {
            $scope.focus = Mid;
            if (e.which != 1 || $(e.target).is("textarea") || window.kp_only) return;
            e.preventDefault();
            var x = e.pageX;
            var y = e.pageY;
            var _this = $(this).parent();
            var w = _this.width();
            var h = _this.height();
            var w2 = w / 2;
            var h2 = h / 2;
            var p = _this.position();
            var left = p.left;
            var top = p.top;
            window.kp_only = true;
            _this.before('<div id="kp_widget_holder"></div>');
            var wid = $("#kp_widget_holder");
            var nod = $(".fe-mod-nodrag");
            wid.css({
                "border": "2px dashed #ccc",
                "height": _this.outerHeight(true)
            });
            _this.css({
                "width": w,
                "height": h,
                "position": "absolute",
                opacity: 0.8,
                "z-index": 900,
                "left": left,
                "top": top
            });
            $(document).mousemove(function (e) {
                $scope.focus = Mid;
                e.preventDefault();
                var l = left + e.pageX - x;
                var t = top + e.pageY - y;
                _this.css({
                    "left": l,
                    "top": t
                });
                var ml = l + w2;
                var mt = t + h2;
                del.parent().not(_this).not(wid).each(function (i) {
                    var obj = $(this);
                    var p = obj.position();
                    var a1 = p.left;
                    var a2 = p.left + obj.width();
                    var a3 = p.top;
                    var a4 = p.top + obj.height();
                    if (a1 < ml && ml < a2 && a3 < mt && mt < a4) {
                        if (!obj.next("#kp_widget_holder").length) {
                            wid.insertAfter(this);
                        } else {
                            wid.insertBefore(this);
                        }
                        return;
                    }
                });
            });
            $(document).mouseup(function () {
                $(document).off('mouseup').off('mousemove');
                $(container).each(function () {
                    var obj = $(this).children();
                    var len = obj.length;
                    if (len == 1 && obj.is(_this)) {
                        $("<div></div>").appendTo(this).attr("class", "kp_widget_block").css({
                            "height": 100
                        });
                    } else if (len == 2 && obj.is(".kp_widget_block")) {
                        $(this).children(".kp_widget_block").remove();
                    }
                });
                var p = wid.position();
                _this.animate({
                    "left": p.left,
                    "top": p.top
                }, 100, function () {
                    _this.removeAttr("style");
                    wid.replaceWith(_this);
                    window.kp_only = null;
                    var arr = [];
                    $(".fe-mod-repeat").find(".fe-mod-parent").each(function (i, val) {
                        arr[i] = val.id;
                    });
                    var newarr = [];
                    angular.forEach(arr, function (aid) {
                        angular.forEach($scope.Items, function (obj) {
                            if (obj.id == aid) {
                                newarr.push(obj);
                                return false;
                            }
                        });
                    });
                    $scope.Items = newarr;
                });
            });
        });
    }

    $scope.addItem = function (Nid) {
        //alert(344);
        var Mid = 'M' + new Date().getTime();
        var Navs = $scope.navs;
        angular.forEach(Navs, function (n, index) {
            if (n.id == Nid) {
                newparams = !clone(n.params) ? '' : clone(n.params);
                newdata = !n.data ? '' : cloneArr(n.data);
                newalldata = !n.alldata ? '' : cloneArr(n.alldata);
                newother = !clone(n.other) ? '' : clone(n.other);
                newcontent = !clone(n.content) ? '' : clone(n.content);
                if (Nid == 'cube') {
                    for (row = 0; row < 4; row++) {
                        for (newparams.layout[row] = {}, col = 0; col < 4; col++) {
                            newparams.layout[row][col] = {
                                cols: 1,
                                rows: 1,
                                isempty: !0,
                                imgurl: "",
                                classname: ""
                            };
                        }
                    }
                }
                var newitem = {
                    id: Mid,
                    temp: Nid,
                    params: newparams,
                    data: newdata,
                    alldata: newalldata,
                    other: newother,
                    content: newcontent
                };
                var insertindex = -1;
                if ($scope.focus != '') {
                    var Items = $scope.Items;
                    angular.forEach(Items, function (a, index) {
                        if (a.id == $scope.focus) {
                            insertindex = index;
                        }
                    });
                }
                if (insertindex == -1) {
                    $scope.Items.push(newitem);
                } else {
                    $scope.Items.splice(insertindex + 1, 0, newitem);
                }
                //$("div[id="+newitem.id+"]").trigger('ng-click');
                setTimeout(function () {
                    $scope.setfocus(newitem.id, null);
                }, 100);

                console.log($scope.Items);
            }
        });
    }

    $scope.delItem = function (id) {
        if (id == 'ME0000000000' || id == 'ME0000000001' || id == 'ME0000000002' || id == 'ME0000000003' || id == 'ME0000000004' || id == 'ME0000000005' || id == 'ME0000000006' || id == 'ME0000000007' || id == 'ME0000000008') {
            alert('不能移除必要元素!');
            return false;
        }
        if (confirm("此操作不可逆，确认移除？")) {
            var Items = $scope.Items;
            angular.forEach(Items, function (a, index) {
                if (a.id == id) {
                    Items.splice(index, 1);
                    $scope.focus = '';
                }
            });
        }
    }
    $scope.over = function (id) {
        $("div[id=" + id + "]").parent().find(".fe-mod-del").stop().show();
    }
    $scope.out = function (id) {
        $("div[id=" + id + "]").parent().find(".fe-mod-del").stop().hide();
    }
    $scope.save = function (n) {
        var pageid = designerId;
        var items = cloneArr($scope.Items);
        angular.forEach(items, function (m, index1) {
            if (m.temp == 'richtext') {
                m.content = encodeURI(m.content);
            }
        });
        var datas = angular.toJson(items);
        var page_info = angular.toJson($scope.pages);
        var page_name = $("input[name=pagename]").val();
        var page_type = $("input[name=pagetype]").val();
        var is_default = $("input[name=is_default]:checked").val();
        if (!page_name) {
            alert('请给你的页面起一个响亮的名字吧');
            return;
        }
        if (n == 3 && page_type == 0) {
            alert('你还没有选择页面的类型哦~');
            return;
        }
        if (!page_type) {
            alert('你还没有选择页面的类型哦~');
            return;
        }
        if (window.dosave == '1') {
            alert('触发关键字已存在！请重新填写。');
            $scope.focus = 'M0000000000000';
            return;
        }
        $(".save-submit").text('保存中...').addClass("fe-save-disabled").data('saving', '1');
        $(".fe-save-submit2").css("color", "#bbb");
        if ($(".fe-save-submit").data('saving') == 1) {
            $.ajax({
                type: 'POST',
                url: storeUrl,
                data: {
                    id: pageid,
                    datas: datas,
                    page_type: page_type,
                    page_name: page_name,
                    page_info: page_info,
                    is_default: is_default
                },
                success: function (data) {
                    console.log(data);
                    if (n == 2) {
                        alert("保存成功！正在生成览页面...");
                        setcookie(data);
                        if (!pageid) {
                            location.href = designerIndex;
                        } else {
                            preview(data);
                        }
                    } else {
                        alert("保存成功！");
                        location.href = designerIndex;
                    }
                    $(".save-submit").text('保存').removeClass("fe-save-disabled").data('saving', '0');
                    $(".fe-save-submit2").css("color", "#4bb5fb")
                },
                error: function () {
                    // alert('保存失败请重试');
                    $(".save-submit").text('保存').removeClass("fe-save-disabled").data('saving', '0');
                    $(".fe-save-submit2").css("color", "#4bb5fb")
                }
            });
        }
    }

    $scope.addGood = function (action, Mid, Gid) {
        $('#floating-good').modal();
        $('#floating-good').attr({
            'action': action,
            'Gid': Gid
        });
    }
    $scope.addCategory = function (num, Mid) {
        $('#floating-category').modal();
        $('#floating-category').attr({
            'num': num
        });
    }
    $scope.addLabel = function (num, Mid) {
        $('#floating-label').modal();
        $('#floating-label').attr({
            'num': num
        });
    }
    $scope.delGood = function (Mid, Gid) {
        if (confirm("此操作不可逆，确认移除？")) {
            var Items = $scope.Items;
            angular.forEach(Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach(m.data, function (g, index2) {
                        if (g.id == Gid) {
                            m.data.splice(index2, 1);
                        }
                    });
                }
            });
        }
    }
    $scope.addArticle = function (action, Mid, Gid) {
        $('#floating-article').modal();
        $('#floating-article').attr({
            'action': action,
            'Gid': Gid
        });
    }
    $scope.delArticle = function (Mid, Gid) {
        if (confirm("此操作不可逆，确认移除？")) {
            var Items = $scope.Items;
            angular.forEach(Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach(m.data, function (g, index2) {
                        if (g.id == Gid) {
                            m.data.splice(index2, 1);
                        }
                    });
                }
            });
        }
    }
    $scope.addCoupon = function (action, Mid, Gid) {
        $('#floating-coupon').modal();
        $('#floating-coupon').attr({
            'action': action,
            'Gid': Gid
        });
    }
    $scope.addForm = function (action, Mid, Gid) {
        $('#floating-form').modal();
        $('#floating-form').attr({
            'action': action,
            'Gid': Gid
        });
    }
    $scope.delCoupon = function (Mid, Gid) {
        if (confirm("此操作不可逆，确认移除？")) {
            var Items = $scope.Items;
            angular.forEach(Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach(m.data, function (g, index2) {
                        if (g.id == Gid) {
                            m.data.splice(index2, 1);
                        }
                    });
                }
            });
        }
    }
    $scope.addFlashsale = function (action, Mid, Gid) {
        $('#floating-flashsale').modal();
        $('#floating-flashsale').attr({
            'action': action,
            'Gid': Gid
        });
    }
    $scope.addAssemble = function (action, Mid, Gid) {
        $('#floating-assemble').modal();
        $('#floating-assemble').attr({
            'action': action,
            'Gid': Gid
        });
    }
    $scope.delFlashsale = function (Mid, Gid) {
        if (confirm("此操作不可逆，确认移除？")) {
            var Items = $scope.Items;
            angular.forEach(Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach(m.data, function (g, index2) {
                        if (g.id == Gid) {
                            m.data.splice(index2, 1);
                        }
                    });
                }
            });
        }
    }
    $scope.delAssemble = function (Mid, Gid) {
        if (confirm("此操作不可逆，确认移除？")) {
            var Items = $scope.Items;
            angular.forEach(Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach(m.data, function (g, index2) {
                        if (g.id == Gid) {
                            m.data.splice(index2, 1);
                        }
                    });
                }
            });
        }
    }

    //分类商品
    $scope.selectCategoryGoods = function (Mid, categoryId) {
        var num = $('#floating-category').attr('num');
        // console.log(Mid, num, categoryId);
        $http.post(selectCategoryGoods, {
            'num': num,
            'category_id': categoryId
        }).success(function (data) {
            //console.log(data);
            angular.forEach($scope.Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach(data, function (d, i) {
                        var Gid = 'G' + new Date().getTime();
                        if (m.data.length < m.params.displaynum) {
                            // 执行添加
                            m.data.push({
                                id: Gid + d.goods_id,
                                img: d.thumb,
                                goodid: d.goods_id,
                                name: d.title,
                                priceold: d.market_price,
                                pricenow: d.price,
                                award: d.award,
                                sales: d.real_sales,
                                award_proportion: d.award_proportion,
                                love_name: d.love_name,
                            });
                        }
                    });
                }
            });
            $('#floating-category .close').click();
        }).error(function (err) {
            // console.log(err);
            alert('查询商品信息失败！请刷新页面。');
        });
    }

    //商品标签
    $scope.selectSearchGoods = function (Mid, Id) {
        var num = $('#floating-label').attr('num');
        // console.log(Mid, num, Id);
        $http.post(selectSearchGoods, {
            'num': num,
            'filtering_id': Id
        }).success(function (data) {
            // console.log(data);
            angular.forEach($scope.Items, function (m, index1) {
                if (m.id == Mid) {
                    angular.forEach(data, function (d, i) {
                        var Gid = 'G' + new Date().getTime();
                        if (m.data.length < m.params.displaynum) {
                            // 执行添加
                            m.data.push({
                                id: Gid + d.goods_id,
                                img: d.thumb,
                                goodid: d.goods_id,
                                name: d.title,
                                priceold: d.market_price,
                                pricenow: d.price,
                                award: d.award,
                                sales: d.real_sales,
                                award_proportion: d.award_proportion,
                                love_name: d.love_name,
                            });
                        }
                    });
                }
            });
            $('#floating-label .close').click();
        }).error(function (err) {
            // console.log(err);
            alert('查询商品信息失败！请刷新页面。');
        });
    }

    $scope.shopImg = function (Mid) {
        require(['jquery', util_name], function ($, util) {
            util.image('', function (data) {
                var Items = $scope.Items;
                angular.forEach(Items, function (m, index1) {
                    if (m.id == Mid) {
                        m.params.bgimg = data['url'];
                        $("div[mid=" + Mid + "]").mouseover();
                    }
                });
            });
        });
    }

    $scope.memberorderImg = function (Mid) {
        require(['jquery', util_name], function ($, util) {
            util.image('', function (data) {
                var Items = $scope.Items;
                angular.forEach(Items, function (m, index1) {
                    if (m.id == Mid) {
                        m.params.memberorderimg = data['url'];
                        $("div[mid=" + Mid + "]").mouseover();
                    }
                });
            });
        });
    }

    $scope.memberbgImg = function (Mid) {
        require(['jquery', util_name], function ($, util) {
            util.image('', function (data) {
                var Items = $scope.Items;
                angular.forEach(Items, function (m, index1) {
                    if (m.id == Mid) {
                        m.params.bgimg = data['url'];
                        $("div[mid=" + Mid + "]").mouseover();
                    }
                });
            });
        });
    }

    $scope.shopImg = function (Mid) {
        require(['jquery', util_name], function ($, util) {
            util.image('', function (data) {
                var Items = $scope.Items;
                angular.forEach(Items, function (m, index1) {
                    if (m.id == Mid) {
                        m.params.bgimg = data['url'];
                        $("div[mid=" + Mid + "]").mouseover();
                    }
                });
            });
        });
    }

    $scope.pageImg = function (Mid, type) {
        require(['jquery', util_name], function ($, util) {
            util.image('', function (data) {
                if (type == 'floatimg') {
                    $scope.pages[0].params.floatimg = data['url'];
                } else if (type == 'kefuimg') {
                    $scope.pages[0].params.kefuimg = data['url'];
                } else if (type == 'telimg') {
                    $scope.pages[0].params.telimg = data['url'];
                } else {
                    $scope.pages[0].params.img = data['url'];
                }
                $("div[mid=" + Mid + "]").trigger("click");
            });
        });
    }

    $scope.$on('ngRepeatFinished', function (ngRepeatFinishedEvent) {
        $('.fe-mod-2 .swipe').each(function () {
            initswipe($(this));
        })
        $('.fe-mod-8-main-img img').each(function () {
            $(this).height($(this).width());
        });
        $('.fe-mod-12 img').each(function () {
            $(this).height($(this).width());
        });
    });

    //门店选项卡 blank
    $scope.selectOpenClose = function (Mid, bid, status) {
        // console.log(Mid, bid, status);
        angular.forEach($scope.Items, function (m, index1) {
            if (m.id == Mid) {
                angular.forEach(m.data, function (d, i) {
                    if (d.id == bid) {
                        m.data[i].is_open = status;
                    }
                });
            }
        });
    }


    $scope.memberselect = function (Mid, bid, status) {
        angular.forEach($scope.Items, function (m, index1) {
            //console.log($scope.Items);
            if (m.id == Mid) {
                angular.forEach(m.data.part, function (d, i) {
                    if (d.id == bid) {
                        if (status == true) {
                            status = false;
                        } else {
                            status = true;
                        }
                        m.data.part[i].is_open = status;
                    }
                });
            }
        });
    }

}]);

myModel.directive('stringHtml', function () {
    return function (scope, el, attr) {
        if (attr.stringHtml) {
            scope.$watch(attr.stringHtml, function (html) {
                el.html(html || '');
            });
        }
    };
});

myModel.directive("onFinishRenderFilters", function ($timeout) {
    return {
        restrict: 'A',
        link: function (scope, element, attr) {
            if (scope.$last === true) {
                $timeout(function () {
                    scope.$emit('ngRepeatFinished');
                });
            }
        }
    };
});
