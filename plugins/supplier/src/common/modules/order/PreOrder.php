<?php
/**
 * Created by PhpStorm.
 * User: shenyang
 * Date: 2018/11/26
 * Time: 3:04 PM
 */

namespace Yunshop\Supplier\common\modules\order;

use app\common\models\Member;
use app\common\modules\orderGoods\OrderGoodsCollection;
use Illuminate\Http\Request;
use Yunshop\Supplier\common\models\Supplier;
use Yunshop\Supplier\common\models\SupplierGoods;

/**
 * Class PreOrder
 * @package Yunshop\Supplier\common\modules\order
 * @property PreSupplierOrder supplierOrder
 */
class PreOrder extends \app\frontend\modules\order\models\PreOrder
{
    public function __construct(array $attributes = [])
    {
        parent::__construct($attributes);
        $this->plugin_id = Supplier::PLUGIN_ID;
        $this->is_plugin = 1;
    }

    /**
     * @param Member $member
     * @param OrderGoodsCollection $orderGoods
     * @param Request|null $request
     * @return $this|void
     * @throws \app\common\exceptions\ShopException
     */
    public function init(
        Member $member,
        OrderGoodsCollection $orderGoods,
        Request $request = null
    )
    {
        parent::init($member, $orderGoods,
            $request); // TODO: Change the autogenerated stub
    }

    protected function initAttributes()
    {
        parent::initAttributes();
        $this->supplierOrder->initAttributes();

    }

    public function afterCreating()
    {
        parent::afterCreating();
        $this->setRelation('supplierOrder', $this->getSupplierOrder());
        $this->supplierOrder->init($this);
        $this->supplierOrder->afterCreating();
    }

    private function getSupplierOrder()
    {
        $supplierOrder = new PreSupplierOrder();
        return $supplierOrder;
    }

    protected function getShopName()
    {
        //todo supplier表中的数据错误,导致存在字符串的null,修改数据前临时修改判断
       // return $this->supplierOrder->supplier->store_name && $this->supplierOrder->supplier->store_name != 'null' ? $this->supplierOrder->supplier->store_name : $this->supplierOrder->supplier->username;
        //下单之前显示供应商名称
        $supplier_goods_id = \YunShop::request()->get('goods_id');
        $supplier = SupplierGoods::with([
            'hasOneSupplier'=>function($q){
                return $q->select('id','username','store_name');
            }
        ])->select('supplier_id')->where('goods_id',$supplier_goods_id)->first();
        return $supplier->hasOneSupplier->store_name &&  $supplier->hasOneSupplier->store_name != 'null' ?  $supplier->hasOneSupplier->store_name : $supplier->hasOneSupplier->username;
    }
}