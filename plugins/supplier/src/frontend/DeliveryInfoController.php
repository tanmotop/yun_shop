<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/9/19
 * Time: 9:45
 */

namespace Yunshop\Supplier\frontend;

use app\common\components\ApiController;
use app\common\exceptions\AppException;
use app\common\models\Order;

class DeliveryInfoController extends ApiController
{

    public function preAction()
    {
        parent::preAction(); // TODO: Change the autogenerated stub

        if (!app('plugins')->isEnabled('delivery-driver')) {
            throw new AppException('司机配送插件未启用');
        }

        if (!\Setting::get('plugin.delivery_driver.is_open')) {
            throw new AppException('司机配送插件未开启');
        }

    }

    public function getDriverList()
    {
        $list =   \Yunshop\DeliveryDriver\models\DriverModel::uniacid()->get();

        return $this->successJson('成功',$list);
    }

    public function index()
    {
        $order_id = \YunShop::request()->order_id;

        $driver_order = \Yunshop\DeliveryDriver\models\DriverOrderModel::uniacid()->where('order_id', $order_id)->with('belongsToDriver')->first();

        $order = Order::uniacid()->with(['hasManyOrderGoods' => function ($query) {
            return $query->select('order_id','thumb');
        }])->find($order_id);

        if (empty($driver_order) || empty($order)) {
            throw new AppException('未找到订单');
        }

        $data['thumb'] = yz_tomedia($order->hasManyOrderGoods->first()->thumb);


        $coordinate =  $this->amapTrack($driver_order, $driver_order->belongsToDriver);
        $data['amap_status'] = empty($coordinate) ?0:1;
        $data['amap_coordinate'] = $coordinate;

        $data['driver_order'] = $driver_order;

        return $this->successJson('成功',$data);


    }

    public function amapTrack($driverOrder, $driver)
    {
        $aaa = [];
        $sss = [];

        if ($driverOrder->status ==  \Yunshop\DeliveryDriver\models\DriverOrderModel::STAY) {
            return [];
        }

        $amap = \Setting::get('delivery_driver.amap');

        $locus = new \Yunshop\DeliveryDriver\services\AmapLocusServices($amap['amap_key'], $amap['amap_sid']);

        $end_time = $driverOrder->status == 2? $driverOrder->end_time : time();
        $day_time = $locus->timeDiff($driverOrder->start_time, $end_time);

        $locus->setParameter('key', $locus->getKey());
        $locus->setParameter('sid', $locus->getServiceId());
        $locus->setParameter('tid', $driver->tid);
        $locus->setParameter('trid',  $driver->trid);
        $locus->setParameter('recoup', 0);
        $locus->setParameter('gap', 5000);
        $locus->setParameter('page', 1);
        $locus->setParameter('pagesize', 998);
        foreach ($day_time as $value) {
            $locus->setParameter('starttime', $value['start_time'].'000');
            $locus->setParameter('endtime', $value['end_time'].'000');
            $result =  $locus->curlGetRequest('https://tsapi.amap.com/v1/track/terminal/trsearch');
            if ($result['errcode'] == '10000') {
                $track = $result['data']['tracks'][0]; //
                $locus_total =  $locus->pageGetData($track);
                foreach ($locus_total as $item) {
                    $aaa = array_merge($aaa, $item['points']);
                }
            }
        }

        foreach ($aaa as $hhh) {
            $sss[] = explode(',', $hhh['location']);
        }

        return $sss;
    }
}