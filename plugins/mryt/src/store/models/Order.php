<?php
/**
 * Author: 芸众商城 www.yunzshop.com
 * Date: 2017/9/11
 * Time: 下午2:37
 */

namespace Yunshop\Mryt\store\models;

use app\common\models\order\OrderPluginBonus;

class Order extends \app\backend\modules\order\models\Order
{
    protected $appends = ['status_name', 'pay_type_name', 'store_name', 'plugin_bonus'];

    public function getPluginBonusAttribute()
    {
        $bonus = OrderPluginBonus::getInfoByOrderId($this->id)->sum('amount');
        return $bonus;
    }

    public function getStoreNameAttribute()
    {
        if ($this->hasOneStoreOrder && $this->hasOneStoreOrder->hasOneStore) {
            return $this->hasOneStoreOrder->hasOneStore->store_name;
        }
    }

    public function scopeOrders($order_builder, $search)
    {
        return parent::scopeOrders($order_builder, $search)->pluginId(); // TODO: Change the autogenerated stub
    }

    public static function getStoreOrderList($search, $storeOrderSearch)
    {
        return self::orders($search)->hasOneStoreOrder($storeOrderSearch);
    }

    public function scopeHasOneStoreOrder($query, $storeOrderSearch)
    {
        return $query->whereHas('hasOneStoreOrder', function ($storeOrder) use ($storeOrderSearch) {
            return $storeOrder->search($storeOrderSearch);
        });
    }

    public function hasOneStoreOrder()
    {
        return $this->hasOne(StoreOrder::class, 'order_id', 'id');
    }

    public function hasOneCashierOrder()
    {
        return $this->hasOne(CashierOrder::class, 'order_id', 'id');
    }

    public function scopePluginId($query, $pluginId = Store::PLUGIN_ID)
    {
        return $query->wherePluginId($pluginId);
    }

    //提成明细搜索
    public static function getCashierSearch($search)
    {
        $model = self::uniacid()
                ->whereHas('hasOneCashierOrder')
                ->with(['hasOneCashierOrder' => function ($cashier_order) {
                    $cashier_order->with('hasOneStore');
                }])
                ->with(['belongsToMember' => function ($query) {
                     $query->select('uid', 'mobile', 'realname', 'nickname', 'avatar');
            }]);

        if (!empty($search['store_id'])) {
            $model->whereHas('hasOneCashierOrder', function ($query) use ($search) {
                    $query->whereHas('hasOneStore', function ($query) use ($search) {
                        $query->where('id', $search['store_id']);
                    });
            });
        }

        if (!empty($search['store_name'])) {
            $model->whereHas('hasOneCashierOrder', function ($query) use ($search) {
                $query->whereHas('hasOneStore', function ($query) use ($search) {
                    $query->where('store_name', 'like', '%' . $search['store_name'] . '%');
                 });
            });
        }

        if (!empty($search['order_sn'])) {
            $model->where('order_sn', $search['order_sn']);
        }

        if ($search['status'] != '') {
            $model->whereHas('hasOneCashierOrder', function ($query) use ($search) {
                $query->where('has_settlement', $search['status']);
            });
        }

        if (!empty($search['search_time']) && $search['search_time'] == 1) {
            $model->whereHas('hasOneCashierOrder', function ($query) use ($search) {
                $query->whereBetween('created_at', [strtotime($search['time']['start']), strtotime($search['time']['end'])]);
            });
        }

        return $model;
    }

    //提成明细搜索
    public static function getStoreSearch($search)
    {
        $model = self::uniacid()
                ->whereHas('hasOneStoreOrder')
                ->with(['hasOneStoreOrder' => function ($store_order) {
                    $store_order->with('hasOneStore');
                }])
                ->with(['belongsToMember' => function ($query) {
                     $query->select('uid', 'mobile', 'realname', 'nickname', 'avatar');
            }]);

        if (!empty($search['store_id'])) {
            $model->whereHas('hasOneStoreOrder', function ($query) use ($search) {
                 $query->where('store_id', $search['store_id']);
            });
        }

        if (!empty($search['store_name'])) {
            $model->whereHas('hasOneStoreOrder', function ($query) use ($search) {
                 $query->whereHas('hasOneStore', function ($query) use ($search) {
                     $query->where('store_name', 'like', '%' . $search['store_name'] . '%');
                 });
            });
        }

        if (!empty($search['order_sn'])) {
            $model->where('order_sn', $search['order_sn']);
        }

        if ($search['status'] != '') {
            $model->whereHas('hasOneStoreOrder', function ($query) use ($search) {
                $query->where('has_settlement', $search['status']);
            });
        }

        if (!empty($search['search_time']) && $search['search_time'] == 1) {
            $model->whereHas('hasOneStoreOrder', function ($query) use ($search) {
                $query->whereBetween('created_at', [strtotime($search['time']['start']), strtotime($search['time']['end'])]);
            });
        }

        return $model;
    }
}